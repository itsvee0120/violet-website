{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\violet-website\\\\src\\\\components\\\\projects\\\\Works.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { projects } from \"./Data\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Works = () => {\n  _s();\n  const [selectedTag, setSelectedTag] = useState(\"All\");\n  const allTags = [\"All\", ...new Set(projects.flatMap(p => p.tags))];\n  const filteredProjects = selectedTag === \"All\" ? projects : projects.filter(p => p.tags.includes(selectedTag));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter_buttons\",\n      children: allTags.map((tag, idx) => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `filter_btn ${selectedTag === tag ? \"active\" : \"\"}`,\n        onClick: () => setSelectedTag(tag),\n        children: tag\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"projects_grid\",\n      children: filteredProjects.map((project, index) => /*#__PURE__*/_jsxDEV(\"a\", {\n        href: project.link,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        className: \"project_card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"project_image_wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: project.image,\n            alt: project.title,\n            className: \"project_image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"project_info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: project.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: project.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"project_tags\",\n            children: project.tags.map((tag, i) => /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"tag\",\n              children: tag\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Works, \"d7+tQReOVn3TXJJzPRfdG1JM1fg=\");\n_c = Works;\nexport default Works;\nvar _c;\n$RefreshReg$(_c, \"Works\");","map":{"version":3,"names":["React","useState","projects","jsxDEV","_jsxDEV","Fragment","_Fragment","Works","_s","selectedTag","setSelectedTag","allTags","Set","flatMap","p","tags","filteredProjects","filter","includes","children","className","map","tag","idx","onClick","fileName","_jsxFileName","lineNumber","columnNumber","project","index","href","link","target","rel","src","image","alt","title","description","i","_c","$RefreshReg$"],"sources":["C:/Projects/violet-website/src/components/projects/Works.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { projects } from \"./Data\";\r\n\r\nconst Works = () => {\r\n  const [selectedTag, setSelectedTag] = useState(\"All\");\r\n\r\n  const allTags = [\"All\", ...new Set(projects.flatMap((p) => p.tags))];\r\n\r\n  const filteredProjects =\r\n    selectedTag === \"All\"\r\n      ? projects\r\n      : projects.filter((p) => p.tags.includes(selectedTag));\r\n\r\n  return (\r\n    <>\r\n      <div className=\"filter_buttons\">\r\n        {allTags.map((tag, idx) => (\r\n          <button\r\n            key={idx}\r\n            className={`filter_btn ${selectedTag === tag ? \"active\" : \"\"}`}\r\n            onClick={() => setSelectedTag(tag)}\r\n          >\r\n            {tag}\r\n          </button>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"projects_grid\">\r\n        {filteredProjects.map((project, index) => (\r\n          <a\r\n            href={project.link}\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            key={index}\r\n            className=\"project_card\"\r\n          >\r\n            <div className=\"project_image_wrapper\">\r\n              <img\r\n                src={project.image}\r\n                alt={project.title}\r\n                className=\"project_image\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"project_info\">\r\n              <h3>{project.title}</h3>\r\n              <p>{project.description}</p>\r\n              <div className=\"project_tags\">\r\n                {project.tags.map((tag, i) => (\r\n                  <span key={i} className=\"tag\">\r\n                    {tag}\r\n                  </span>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </a>\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Works;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,QAAQ,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAElC,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAErD,MAAMU,OAAO,GAAG,CAAC,KAAK,EAAE,GAAG,IAAIC,GAAG,CAACV,QAAQ,CAACW,OAAO,CAAEC,CAAC,IAAKA,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC;EAEpE,MAAMC,gBAAgB,GACpBP,WAAW,KAAK,KAAK,GACjBP,QAAQ,GACRA,QAAQ,CAACe,MAAM,CAAEH,CAAC,IAAKA,CAAC,CAACC,IAAI,CAACG,QAAQ,CAACT,WAAW,CAAC,CAAC;EAE1D,oBACEL,OAAA,CAAAE,SAAA;IAAAa,QAAA,gBACEf,OAAA;MAAKgB,SAAS,EAAC,gBAAgB;MAAAD,QAAA,EAC5BR,OAAO,CAACU,GAAG,CAAC,CAACC,GAAG,EAAEC,GAAG,kBACpBnB,OAAA;QAEEgB,SAAS,EAAE,cAAcX,WAAW,KAAKa,GAAG,GAAG,QAAQ,GAAG,EAAE,EAAG;QAC/DE,OAAO,EAAEA,CAAA,KAAMd,cAAc,CAACY,GAAG,CAAE;QAAAH,QAAA,EAElCG;MAAG,GAJCC,GAAG;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKF,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAENxB,OAAA;MAAKgB,SAAS,EAAC,eAAe;MAAAD,QAAA,EAC3BH,gBAAgB,CAACK,GAAG,CAAC,CAACQ,OAAO,EAAEC,KAAK,kBACnC1B,OAAA;QACE2B,IAAI,EAAEF,OAAO,CAACG,IAAK;QACnBC,MAAM,EAAC,QAAQ;QACfC,GAAG,EAAC,qBAAqB;QAEzBd,SAAS,EAAC,cAAc;QAAAD,QAAA,gBAExBf,OAAA;UAAKgB,SAAS,EAAC,uBAAuB;UAAAD,QAAA,eACpCf,OAAA;YACE+B,GAAG,EAAEN,OAAO,CAACO,KAAM;YACnBC,GAAG,EAAER,OAAO,CAACS,KAAM;YACnBlB,SAAS,EAAC;UAAe;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1B;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eAENxB,OAAA;UAAKgB,SAAS,EAAC,cAAc;UAAAD,QAAA,gBAC3Bf,OAAA;YAAAe,QAAA,EAAKU,OAAO,CAACS;UAAK;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACxBxB,OAAA;YAAAe,QAAA,EAAIU,OAAO,CAACU;UAAW;YAAAd,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC5BxB,OAAA;YAAKgB,SAAS,EAAC,cAAc;YAAAD,QAAA,EAC1BU,OAAO,CAACd,IAAI,CAACM,GAAG,CAAC,CAACC,GAAG,EAAEkB,CAAC,kBACvBpC,OAAA;cAAcgB,SAAS,EAAC,KAAK;cAAAD,QAAA,EAC1BG;YAAG,GADKkB,CAAC;cAAAf,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEN,CACP;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA,GArBDE,KAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAsBT,CACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA,eACN,CAAC;AAEP,CAAC;AAACpB,EAAA,CAzDID,KAAK;AAAAkC,EAAA,GAALlC,KAAK;AA2DX,eAAeA,KAAK;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}