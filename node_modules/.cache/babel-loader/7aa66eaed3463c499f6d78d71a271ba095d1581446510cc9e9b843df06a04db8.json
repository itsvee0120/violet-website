{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nviol\\\\OneDrive\\\\Coding stuff\\\\violet-website\\\\violet-website\\\\src\\\\components\\\\projects\\\\Projects.jsx\";\nimport React from \"react\";\nimport \"./projects.css\";\nimport Works from \"./Works\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Projects = () => {\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"projects section\",\n    id: \"projects\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"section_title\",\n      children: \"Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"section_subtitle\",\n      children: \"My recent work\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"projects_grid\",\n      children: projectData.map((project, index) => /*#__PURE__*/_jsxDEV(\"a\", {\n        href: project.link,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        className: \"project_card\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: project.image,\n          alt: project.title,\n          className: \"project_image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"project_info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: project.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: project.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n_c = Projects;\nexport default Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["React","Works","jsxDEV","_jsxDEV","Projects","className","id","children","fileName","_jsxFileName","lineNumber","columnNumber","projectData","map","project","index","href","link","target","rel","src","image","alt","title","description","_c","$RefreshReg$"],"sources":["C:/Users/nviol/OneDrive/Coding stuff/violet-website/violet-website/src/components/projects/Projects.jsx"],"sourcesContent":["import React from \"react\";\r\nimport \"./projects.css\";\r\nimport Works from \"./Works\";\r\n\r\nconst Projects = () => {\r\n  return (\r\n    <section className=\"projects section\" id=\"projects\">\r\n      <h2 className=\"section_title\">Projects</h2>\r\n      <span className=\"section_subtitle\">My recent work</span>\r\n\r\n      <div className=\"projects_grid\">\r\n        {projectData.map((project, index) => (\r\n          <a\r\n            href={project.link}\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            key={index}\r\n            className=\"project_card\"\r\n          >\r\n            <img\r\n              src={project.image}\r\n              alt={project.title}\r\n              className=\"project_image\"\r\n            />\r\n            <div className=\"project_info\">\r\n              <h3>{project.title}</h3>\r\n              <p>{project.description}</p>\r\n            </div>\r\n          </a>\r\n        ))}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Projects;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,gBAAgB;AACvB,OAAOC,KAAK,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EACrB,oBACED,OAAA;IAASE,SAAS,EAAC,kBAAkB;IAACC,EAAE,EAAC,UAAU;IAAAC,QAAA,gBACjDJ,OAAA;MAAIE,SAAS,EAAC,eAAe;MAAAE,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3CR,OAAA;MAAME,SAAS,EAAC,kBAAkB;MAAAE,QAAA,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAExDR,OAAA;MAAKE,SAAS,EAAC,eAAe;MAAAE,QAAA,EAC3BK,WAAW,CAACC,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAC9BZ,OAAA;QACEa,IAAI,EAAEF,OAAO,CAACG,IAAK;QACnBC,MAAM,EAAC,QAAQ;QACfC,GAAG,EAAC,qBAAqB;QAEzBd,SAAS,EAAC,cAAc;QAAAE,QAAA,gBAExBJ,OAAA;UACEiB,GAAG,EAAEN,OAAO,CAACO,KAAM;UACnBC,GAAG,EAAER,OAAO,CAACS,KAAM;UACnBlB,SAAS,EAAC;QAAe;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1B,CAAC,eACFR,OAAA;UAAKE,SAAS,EAAC,cAAc;UAAAE,QAAA,gBAC3BJ,OAAA;YAAAI,QAAA,EAAKO,OAAO,CAACS;UAAK;YAAAf,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACxBR,OAAA;YAAAI,QAAA,EAAIO,OAAO,CAACU;UAAW;YAAAhB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzB,CAAC;MAAA,GAXDI,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAYT,CACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEd,CAAC;AAACc,EAAA,GA7BIrB,QAAQ;AA+Bd,eAAeA,QAAQ;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}